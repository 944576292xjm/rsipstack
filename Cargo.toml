[package]
name = "rsipstack"
version = "0.1.0"
edition = "2021"
description = "SIP Stack Rust library for building SIP applications"
license = "MIT"
repository = "https://github.com/restsend/rsipstack"
readme = "README.md"
keywords = ["sip", "voip", "telephony", "sipstack"]
authors = ["kui<kui@fourz.cn>"]
categories = ["network-programming", "multimedia"]


[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
async-trait = "0.1.83"
futures = "0.3.31"
log = "0.4.22"
rsip = "0.4.0"
tracing = "0.1.40"
wasm-bindgen = "0.2.84"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
wasm-bindgen-futures = "0.4.45"
tokio-util = "0.7.13"
tracing-subscriber = { version = "0.3.19", features = ["local-time"] }
uuid = "0.8.2"
rand = "0.8.5"

[features]
default = ["console_error_panic_hook"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1.41.0", features = ["time", "sync", "macros", "io-util"] }
getrandom = { version = "0.2.15", features = ["js"] }
uuid = { version = "0.8.2", features = ["stdweb"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.41.0", features = ["full"] }
stun-rs = "0.1.9"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"
dotenv = "0.15"
clap = { version = "4.0", features = ["derive"] }
sdp-rs = "0.2.1"
rtp-rs = "0.6.0"

[profile.release]
#strip = true
opt-level = "z"
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.wasm-pack.profile.release]
wasm-opt = true
